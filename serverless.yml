#aws product design app apis
#version 1.0.0

service: aws-create-event-v1
provider:
  name: aws
  runtime: nodejs14.x  
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-south-1
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            # - dynamodb:PostTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["CreateEvents", "Arn"] } 
            # Resource: !GetAtt PostTable.Arn
  environment:
    EVENTS_TABLE: ${self:service}-events # table for user data

custom:
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
  serverless-offline:
    httpPort: 5000 # for api port
    resourceRoutes: true # http proxy


resources: # actual config for table
  Resources:
    CreateEvents:
      Type: AWS::DynamoDB::Table # serverless name of table
      Properties:
        TableName: ${self:service}-events # s3 table name
        AttributeDefinitions:
          - AttributeName: uuid #field name
            AttributeType: S # users id will be string
        KeySchema: # it will generate key for users id
          - AttributeName: uuid
            KeyType: HASH # generate hast id for users id
        ProvisionedThroughput: # how much min you want to read and write data in table
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
 

# commit when deploy on aws packagess
# plugins:
#   - serverless-dynamodb-local
#   - serverless-offline

functions:

################################################################
# EVENTS FUNCTIONS
################################################################

# events api schema

  getAllEvent:
      handler: src/eventsApis.handler     
      name: get-all-event # lambda function name
      description: this function to get all the events
      timeout: 10 #sec to execute otherwise fail
      memorySize: 128 #it will take max size
      events:
        - http: # endpoint and params for api gatway
            path: get/events
            method: get
            private: false
            cors: true


  createEvent:
      handler: src/eventsApis.handler     
      name: create-event # lambda function name
      description: this function to create the events
      timeout: 10 #sec to execute otherwise fail
      memorySize: 128 #it will take max size
      events:
        - http: # endpoint and params for api gatway
            path: create/event
            method: post
            private: false
            cors: true

  deleteEvent:
      handler: src/eventsApis.handler     
      name: delete-events # lambda function name
      description: this function to delete the events
      timeout: 10 #sec to execute otherwise fail
      memorySize: 128 #it will take max size
      events:
        - http: # endpoint and params for api gatway
            path: delete/event/{uuid}
            method: delete
            private: false
            cors: true

